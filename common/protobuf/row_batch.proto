// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//

package impala;

import "common.proto";

// Serialized, self-contained version of a RowBatch (in be/src/runtime/row-batch.h).
// All fields are required in V1.
message RowBatchHeaderPB {
  // total number of rows contained in this batch
  optional int32 num_rows = 1;

  // Tuple ids for the rows in this batch.
  repeated int32 row_tuples = 2;

  // Offset of tuple i into tuple_data. There are a total of num_rows * num_tuples_per_row
  // offsets. An offset of -1 records a NULL.
  optional int32 tuple_offsets_sidecar_idx = 3;

  // Index of the accompanying sidecar which contains serialized tuple data.
  optional int32 tuple_data_sidecar_idx = 4;

  // Size before any compression is applied.
  optional int64 uncompressed_size = 5;

  // Of type CatalogObjects.THdfsCompression (TODO(KRPC): native enum)
  optional int32 compression_type = 6;
}
